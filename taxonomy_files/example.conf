# This is an example configuration file that illustrates and documents all options
# supported by the taxonomy CSV parser.

[main]
# The location of the input CSV file.  If a relative path is provided, it is
# interpreted relative to the location of this configuration file.
inputcsv = 

# The system of rank names to use.
# 1 = animals
# 2 = plants, using phyla and its derivatives
# 3 = plants, using divisions and its derivatives
ranksys =


[taxonomy]
# The ID to use for this taxonomy.
taxonomyid = 2
# The name of the taxonomy. 
name = 
# Whether this is a master taxonomy for MOL. True/False
ismaster = True 


[citation]
# These settings define the citation information for the taxonomy.
citationstr = This doesn't matter
authordisplay = same
#url = 
#doi = 

[root]
# These settings specify the root taxon_concept for this taxonomy.
rank = 
name = 
# Specifies the taxonomy ID for the root taxon *only*, which may be different from
# the taxonomy ID used for the rest of the taxa in the taxonomy.  For most cases,
# this will be 1 (the MOL backbone taxonomy).
taxonomyid = 1 

[synonyms]
# The definitions in this section specify how taxon name synonyms should be parsed
# from the input CSV file.  Synonyms will be applied to the lowest-level taxon that
# is present in each CSV file row.  E.g., if a row contains a subspecies name, then
# the synonyms are assumed to apply to the subspecies.  If the row contains only a
# species name (no subspecies), then the synonyms are assumed to apply to the species
# name.  This section is optional.

# The column containing the synonyms.
colname = Synonyms
# The separator character used to delimit multiple synonyms.  If this setting is not
# defined, ',' is used by default.
separator = ,

[rank_mappings]
# The definitions in the rank_mappings section indicate which columns from the input
# CSV file contain taxonomy information and how they map to the rank names used in
# the database.  The format is:
#
# CSV_column_name: database_rank_name
#
# For example, to indicate that the column "ScientificName" in the source CSV file
# contains the species name, the following definition would be used:
#
# ScientificName: Species
#
# If a column name in the CSV file matches the rank name in the database, then the
# definition would be written like this:
#
# Family: Family
#
# "_ParseGenus" is a special pseudo-column name that indicates the genus name for each
# taxon is not provided as a column in the CSV file and should instead be parsed from
# the species name string.  It is used like this:
#
# _ParseGenus: Genus
#
# Similarly, "_ParseSubspecies" is a special pseudo-column name that indicates that
# subspecies names are not provided in a separate column and should instead be parsed
# from the species name string.  It is used like this:
#
# _ParseSubspecies: Subspecies

#example - change as necessary
ScientificName: Species
_ParseGenus: Genus
Family: Family
Suborder: Suborder
Order: Order
